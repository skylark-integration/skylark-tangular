{"version":3,"sources":["Template.js"],"names":["define","tangular","SKIP","null","undefined","true","false","REG_VARIABLES","REG_KEY","REG_KEYCLEAN","REG_NUM","REG_STRING","REG_CMDFIND","REG_CMDCLEAN","REG_TRIM","Template","this","commands","variables","builder","split","prototype","compile","template","tmp","self","ifcount","loopcount","loops","replace","text","index","cmd","trim","variable","helpers","isif","isloop","iscode","pop","substring","parseVariables","length","i","name","push","indexOf","match","toString","slice","helper","safe","make","condition","skip","arr","key","keys","j","test","output","k","join","Math","random","namea","lastIndexOf","str","$","Object","names","code","Function"],"mappings":"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","file":"../Template.js","sourcesContent":["define([\r\n\t\"./tangular\"\r\n],function(tangular){\r\n\r\n\tvar SKIP = { 'null': true, 'undefined': true, 'true': true, 'false': true };\r\n\tvar REG_VARIABLES = /&&|\\|\\|/;\r\n\tvar REG_KEY = /[a-z0-9._]+/gi;\r\n\tvar REG_KEYCLEAN = /^[a-z0-9_$]+/i;\r\n\tvar REG_NUM = /^[0-9]/;\r\n\tvar REG_STRING = /'.*?'|\".?\"/g;\r\n\tvar REG_CMDFIND = /\\{\\{.*?\\}\\}/g;\r\n\tvar REG_CMDCLEAN = /\\{\\{|\\}\\}/g;\r\n\tvar REG_TRIM = /\\n$/g;\r\n\r\n\tfunction Template() {\r\n\t\tthis.commands;\r\n\t\tthis.variables;\r\n\t\tthis.builder;\r\n\t\tthis.split = '\\0';\r\n\t}\r\n\r\n\r\n\tTemplate.prototype.compile = function(template) {\r\n\r\n\t\tvar self = this;\r\n\t\tvar ifcount = 0;\r\n\t\tvar loopcount = 0;\r\n\t\tvar tmp;\r\n\t\tvar loops = [];\r\n\r\n\t\tself.variables = {};\r\n\t\tself.commands = [];\r\n\r\n\t\tself.builder = template.replace(REG_CMDFIND, function(text) {\r\n\r\n\t\t\tvar cmd = text.replace(REG_CMDCLEAN, '').trim();\r\n\t\t\tvar variable = null;\r\n\t\t\tvar helpers = null;\r\n\t\t\tvar index;\r\n\t\t\tvar isif = false;\r\n\t\t\tvar isloop = false;\r\n\t\t\tvar iscode = true;\r\n\r\n\t\t\tif (cmd === 'fi') {\r\n\t\t\t\tifcount--;\r\n\t\t\t\t// end of condition\r\n\t\t\t} else if (cmd === 'end') {\r\n\t\t\t\tloopcount--;\r\n\t\t\t\t// end of loop\r\n\t\t\t\tloops.pop();\r\n\t\t\t} else if (cmd.substring(0, 3) === 'if ') {\r\n\t\t\t\tifcount++;\r\n\t\t\t\t// condition\r\n\t\t\t\tvariable = self.parseVariables(cmd.substring(3), loops);\r\n\t\t\t\tif (variable.length) {\r\n\t\t\t\t\tfor (var i = 0; i < variable.length; i++) {\r\n\t\t\t\t\t\tvar name = variable[i];\r\n\t\t\t\t\t\tif (self.variables[name])\r\n\t\t\t\t\t\t\tself.variables[name]++;\r\n\t\t\t\t\t\telse\r\n\t\t\t\t\t\t\tself.variables[name] = 1;\r\n\t\t\t\t\t}\r\n\t\t\t\t} else\r\n\t\t\t\t\tvariable = null;\r\n\t\t\t\tisif = true;\r\n\t\t\t\tiscode = true;\r\n\t\t\t} else if (cmd.substring(0, 8) === 'foreach ') {\r\n\r\n\t\t\t\tloopcount++;\r\n\t\t\t\t// loop\r\n\r\n\t\t\t\ttmp = cmd.substring(8).split(' ');\r\n\t\t\t\tloops.push(tmp[0].trim());\r\n\r\n\t\t\t\tindex = tmp[2].indexOf('.');\r\n\t\t\t\tif (index !== -1)\r\n\t\t\t\t\ttmp[2] = tmp[2].substring(0, index);\r\n\r\n\t\t\t\tvariable = tmp[2].trim();\r\n\r\n\t\t\t\tif (loops.indexOf(variable) === -1) {\r\n\t\t\t\t\tif (self.variables[variable])\r\n\t\t\t\t\t\tself.variables[variable]++;\r\n\t\t\t\t\telse\r\n\t\t\t\t\t\tself.variables[variable] = 1;\r\n\t\t\t\t\tvariable = [variable];\r\n\t\t\t\t}\r\n\t\t\t\telse\r\n\t\t\t\t\tvariable = null;\r\n\r\n\t\t\t\tisloop = true;\r\n\t\t\t} else if (cmd.substring(0, 8) === 'else if ') {\r\n\t\t\t\t// else if\r\n\t\t\t\tvariable = self.parseVariables(cmd.substring(8), loops);\r\n\t\t\t\tif (variable.length) {\r\n\t\t\t\t\tfor (var i = 0; i < variable.length; i++) {\r\n\t\t\t\t\t\tvar name = variable[i];\r\n\t\t\t\t\t\tif (self.variables[name])\r\n\t\t\t\t\t\t\tself.variables[name]++;\r\n\t\t\t\t\t\telse\r\n\t\t\t\t\t\t\tself.variables[name] = 1;\r\n\t\t\t\t\t}\r\n\t\t\t\t} else\r\n\t\t\t\t\tvariable = null;\r\n\t\t\t\tisif = true;\r\n\t\t\t} else if (cmd !== 'continue' && cmd !== 'break' && cmd !== 'else') {\r\n\r\n\r\n\t\t\t\tvariable = cmd ? cmd.match(REG_KEYCLEAN) : null;\r\n\r\n\t\t\t\tif (variable)\r\n\t\t\t\t\tvariable = variable.toString();\r\n\r\n\t\t\t\tif (variable && SKIP[variable])\r\n\t\t\t\t\tvariable = null;\r\n\r\n\t\t\t\tif (variable && loops.indexOf(variable) === -1) {\r\n\t\t\t\t\tif (self.variables[variable])\r\n\t\t\t\t\t\tself.variables[variable]++;\r\n\t\t\t\t\telse\r\n\t\t\t\t\t\tself.variables[variable] = 1;\r\n\r\n\t\t\t\t\tvariable = [variable];\r\n\t\t\t\t} else\r\n\t\t\t\t\tvariable = null;\r\n\r\n\t\t\t\tif (cmd.indexOf('|') === -1)\r\n\t\t\t\t\tcmd += ' | encode';\r\n\r\n\t\t\t\thelpers = cmd.split('|');\r\n\t\t\t\tcmd = helpers[0];\r\n\t\t\t\thelpers = helpers.slice(1);\r\n\t\t\t\tif (helpers.length) {\r\n\t\t\t\t\tfor (var i = 0; i < helpers.length; i++) {\r\n\t\t\t\t\t\tvar helper = helpers[i].trim();\r\n\t\t\t\t\t\tindex = helper.indexOf('(');\r\n\t\t\t\t\t\tif (index === -1) {\r\n\t\t\t\t\t\t\thelper = 'Thelpers.$execute(model,\\'' + helper + '\\',\\7)';\r\n\t\t\t\t\t\t} else\r\n\t\t\t\t\t\t\thelper = 'Thelpers.$execute(model,\\'' + helper.substring(0, index) + '\\',\\7,' + helper.substring(index + 1);\r\n\t\t\t\t\t\thelpers[i] = helper;\r\n\t\t\t\t\t}\r\n\t\t\t\t} else\r\n\t\t\t\t\thelpers = null;\r\n\r\n\t\t\t\tcmd = self.safe(cmd.trim() || 'model');\r\n\t\t\t\tiscode = false;\r\n\t\t\t}\r\n\r\n\t\t\tself.commands.push({ index: self.commands.length, cmd: cmd, ifcount: ifcount, loopcount: loopcount, variable: variable, helpers: helpers, isloop: isloop, isif: isif, iscode: iscode });\r\n\t\t\treturn self.split;\r\n\r\n\t\t}).split(self.split);\r\n\r\n\r\n\t\tfor (var i = 0, length = self.builder.length; i < length; i++)\r\n\t\t\tself.builder[i] = self.builder[i].replace(REG_TRIM, '');\r\n\r\n\t\treturn self.make();\r\n\t};\r\n\r\n\tTemplate.prototype.parseVariables = function(condition, skip) {\r\n\r\n\t\tvar variables = [];\r\n\t\tvar arr = condition.split(REG_VARIABLES);\r\n\t\tfor (var i = 0, length = arr.length; i < length; i++) {\r\n\r\n\t\t\tvar key = arr[i].replace(REG_STRING, '');\r\n\t\t\tvar keys = key.match(REG_KEY);\r\n\r\n\t\t\tfor (var j = 0; j < keys.length; j++) {\r\n\t\t\t\tkey = keys[j];\r\n\t\t\t\tkey = key.split('.')[0];\r\n\t\t\t\tif (!key || (REG_NUM).test(key) || SKIP[key])\r\n\t\t\t\t\tcontinue;\r\n\t\t\t\tvariables.indexOf(key) === -1 && skip.indexOf(key) === -1 && variables.push(key);\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn variables;\r\n\t};\r\n\r\n\tTemplate.prototype.safe = function(cmd) {\r\n\r\n\t\tvar arr = cmd.split('.');\r\n\t\tvar output = [];\r\n\r\n\t\tfor (var i = 1; i < arr.length; i++) {\r\n\t\t\tvar k = arr.slice(0, i).join('.');\r\n\t\t\toutput.push(k + '==null?\\'\\':');\r\n\t\t}\r\n\t\treturn output.join('') + arr.join('.');\r\n\t};\r\n\r\n\tTemplate.prototype.make = function() {\r\n\r\n\t\tvar self = this;\r\n\t\tvar builder = ['var $output=$text[0];var $tmp;var $index=0;'];\r\n\r\n\t\tfor (var i = 0, length = self.commands.length; i < length; i++) {\r\n\r\n\t\t\tvar cmd = self.commands[i];\r\n\t\t\tvar tmp;\r\n\r\n\t\t\ti && builder.push('$output+=$text[' + i + '];');\r\n\r\n\t\t\tif (cmd.iscode) {\r\n\r\n\t\t\t\tif (cmd.isloop) {\r\n\r\n\t\t\t\t\tvar name = '$i' + Math.random().toString(16).substring(3, 6);\r\n\t\t\t\t\tvar namea = name + 'a';\r\n\t\t\t\t\ttmp = cmd.cmd.substring(cmd.cmd.lastIndexOf(' in ') + 4).trim();\r\n\t\t\t\t\ttmp = namea + '=' + self.safe(tmp) + ';if(!(' + namea + ' instanceof Array)){if(' + namea + '&&typeof(' + namea + ')===\\'object\\')' + namea + '=Tangular.toArray(' + namea + ')}if(' + namea + ' instanceof Array&&' + namea + '.length){for(var ' + name + '=0,' + name + 'l=' + namea + '.length;' + name + '<' + name + 'l;' + name + '++){$index=' + name + ';var ' + cmd.cmd.split(' ')[1] + '=' + namea + '[' + name + '];';\r\n\t\t\t\t\tbuilder.push(tmp);\r\n\r\n\t\t\t\t} else if (cmd.isif) {\r\n\t\t\t\t\tif (cmd.cmd.substring(0, 8) === 'else if ')\r\n\t\t\t\t\t\tbuilder.push('}' + cmd.cmd.substring(0, 8).trim() + '(' + cmd.cmd.substring(8).trim() + '){');\r\n\t\t\t\t\telse\r\n\t\t\t\t\t\tbuilder.push(cmd.cmd.substring(0, 3).trim() + '(' + cmd.cmd.substring(3).trim() + '){');\r\n\t\t\t\t} else {\r\n\t\t\t\t\tswitch (cmd.cmd) {\r\n\t\t\t\t\t\tcase 'else':\r\n\t\t\t\t\t\t\tbuilder.push('}else{');\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\tcase 'end':\r\n\t\t\t\t\t\t\tbuilder.push('}}');\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\tcase 'fi':\r\n\t\t\t\t\t\t\tbuilder.push('}');\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\tcase 'break':\r\n\t\t\t\t\t\t\tbuilder.push('break;');\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\tcase 'continue':\r\n\t\t\t\t\t\t\tbuilder.push('continue;');\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t} else {\r\n\t\t\t\tif (cmd.helpers) {\r\n\t\t\t\t\tvar str = '';\r\n\t\t\t\t\tfor (var j = 0; j < cmd.helpers.length; j++) {\r\n\t\t\t\t\t\tvar helper = cmd.helpers[j];\r\n\t\t\t\t\t\tif (j === 0)\r\n\t\t\t\t\t\t\tstr = helper.replace('\\7', cmd.cmd.trim()).trim();\r\n\t\t\t\t\t\telse\r\n\t\t\t\t\t\t\tstr = helper.replace('\\7', str.trim());\r\n\t\t\t\t\t}\r\n\t\t\t\t\tbuilder.push('$tmp=' + str + ';if($tmp!=null)$output+=$tmp;');\r\n\t\t\t\t} else\r\n\t\t\t\t\tbuilder.push('if(' + cmd.cmd + '!=null)$output+=' + cmd.cmd + ';');\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tbuilder.push((length ? ('$output+=$text[' + length + '];') : '') + 'return $output;');\r\n\r\n\t\tdelete self.variables.$;\r\n\t\tvar variables = Object.keys(self.variables);\r\n\t\tvar names = ['$ || {}', 'model'];\r\n\r\n\t\tfor (var i = 0; i < variables.length; i++)\r\n\t\t\tnames.push('model.' + variables[i]);\r\n\r\n\t\tvar code = 'var tangular=function($,model' + (variables.length ? (',' + variables.join(',')) : '') + '){' + builder.join('') + '};return function(model,$){return tangular(' + names.join(',') + ');}';\r\n\t\treturn (new Function('$text', code))(self.builder);\r\n\t};\r\n\r\n\treturn Template\t;\r\n\r\n});"]}